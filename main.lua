-- üî• LINE Rangers v11.0.3 Script by Ohmmi (Lite Edition + Floating GUI)
gg.setVisible(false)

-- üí° Shortcut
local toast, alert, prompt = gg.toast, gg.alert, gg.prompt


-- üìå Memory Helpers
local function write(addr, type, val) gg.setValues({{address = addr, flags = type, value = val}}) end
local function read(addr, type) return gg.getValues({{address = addr, flags = type}})[1].value end
local function GetLibBase(lib)
    for _, r in pairs(gg.getRangesList(lib)) do if r.state == "Xa" then return r.start end end
end

-- üìç Setup
local BaseAddress = GetLibBase("libgame.so")
if not BaseAddress then alert("‡πÑ‡∏°‡πà‡∏û‡∏ö libgame.so", "‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏Å‡∏°‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå") os.exit() end

if gg.getTargetInfo().versionName ~= "11.0.3" then
    alert("‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô", "‡πÄ‡∏Å‡∏°‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô: "..gg.getTargetInfo().versionName..
          "\n‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô 11.0.3\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡∏≤‡∏Å‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á")
end

-- üß† Address Utils
local function addr(offset) return BaseAddress + offset end

-- ‚öôÔ∏è Hack Definitions
local Hack = {
    [1] = { name = "‡∏ï‡∏µ‡πÅ‡∏£‡∏á",       offset = 0x82cbac,   type = gg.TYPE_FLOAT },
    [2] = { name = "‡∏ï‡∏µ‡πÑ‡∏ß",        offset = 0x4eaa20,   type = gg.TYPE_FLOAT },
    [3] = { name = "‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏ï‡∏±‡∏ß‡πÑ‡∏ß",  offset = 0x4e5ffc,   type = gg.TYPE_FLOAT },
    [4] = { name = "‡∏Ü‡πà‡∏≤‡∏®‡∏±‡∏ï‡∏£‡∏π",       offset = 0x5b0fd0,   value = 10000, switch = false, type = gg.TYPE_FLOAT },
    [5] = { name = "‡∏®‡∏±‡∏ï‡∏£‡∏π‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å",     offset = {0x551614, 0x5524b0, 0x557924}, value = 0, switch = false, type = gg.TYPE_FLOAT },
    [6] = { name = "‡∏ö‡∏≠‡∏™‡∏Å‡∏¥‡∏•‡∏î‡πå‡∏¢‡∏∑‡∏ô‡∏ô‡∏¥‡πà‡∏á", offset = 0x587240,   value = -100, switch = false, type = gg.TYPE_FLOAT },
    [7] = { name = "‡∏Å‡∏±‡∏ô‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô PVP",   offset = 0x540800,   value = 1.40129846e-40, switch = false, type = gg.TYPE_FLOAT },
    [8] = { name = "‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏°", offset = 0xd22654,   type = gg.TYPE_FLOAT },

    modes = {
        ["‡∏™‡πÄ‡∏ï‡∏à‡∏´‡∏•‡∏±‡∏Å"]   = { [1]=9999, [2]=-100, [3]=0 },
        ["‡∏™‡πÄ‡∏ï‡∏à‡∏û‡∏¥‡πÄ‡∏®‡∏©"] = { [1]=8888, [2]=-90,  [3]=0 },
        ["‡∏™‡πÄ‡∏ï‡∏à‡∏à‡∏∏‡∏ï‡∏¥"]   = { [1]=7777, [2]=-80,  [3]=0 },
        ["‡∏´‡∏≠‡∏Ñ‡∏≠‡∏¢"]     = { [1]=6666, [2]=-70,  [3]=0 },
        ["‡∏ö‡∏≠‡∏™‡∏Å‡∏¥‡∏•‡∏î‡πå"]   = { [1]=5555, [2]=-60,  [3]=0 },
        ["PVP"]       = { [1]=0,    [2]=0,    [3]=1.40129846e-40 },
    }
}

-- ‚úÖ Apply Hack
local function ApplyHack(h, askUser)
    local addrs = type(h.offset) == "table" and h.offset or {h.offset}
    h.base = h.base or {}
    for i, o in ipairs(addrs) do h.base[i] = h.base[i] or addr(o) end

    if askUser then
        local current = read(h.base[1], h.type)
        local input = prompt({"üîß "..h.name}, {tostring(current)}, {"number"})
        if input and tonumber(input[1]) then
            for _, a in ipairs(h.base) do write(a, h.type, tonumber(input[1])) end
            toast("‚úÖ "..h.name.." = "..input[1])
        end
    else
        h.switch = not h.switch
        h.off = h.off or read(h.base[1], h.type)
        local v = h.switch and h.value or h.off
        for _, a in ipairs(h.base) do write(a, h.type, v) end
        toast((h.switch and "üü¢ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô " or "üî¥ ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ")..h.name)
    end
end

-- üéØ Auto Mode
local function ApplyAutoMode(modeName)
    local mode = Hack.modes[modeName]
    if not mode then toast("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏´‡∏°‡∏î: "..modeName) return end
    for i = 1, 3 do
        local h = Hack[i]
        if mode[i] then
            h.base = h.base or {}
            local addrs = type(h.offset) == "table" and h.offset or {h.offset}
            for j, o in ipairs(addrs) do h.base[j] = h.base[j] or addr(o) end
            for _, a in ipairs(h.base) do write(a, h.type, mode[i]) end
        end
    end
    toast("‚ö° ‡πÇ‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: "..modeName)
end

-- ‚ôªÔ∏è Reset All Hacks
local function ResetAll()
    for _, h in pairs(Hack) do
        if h.switch and h.off then
            local base = type(h.base) == "table" and h.base or {h.base}
            for _, a in ipairs(base) do write(a, h.type, h.off) end
            h.switch = false
        end
    end
    toast("‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß")
end

-- ü™ü Floating GUI
local function FloatingGUI()
    while true do
        if gg.isVisible() then
            gg.setVisible(false)

            local main = gg.choice({
                "üéõÔ∏è ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡πÄ‡∏≠‡∏á",
                "‚ö° ‡πÇ‡∏´‡∏°‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥",
                "üîò ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô",
                "üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
                "üö´ ‡∏õ‡∏¥‡∏î‡πÄ‡∏Å‡∏°",
                "üëã ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå"
            }, nil, "üëë LINE Rangers Mod Menu\nby Ohmmi")

            if not main then return end

            if main == 1 then
                local options = {}
                for i = 1, 3 do table.insert(options, "[‚öôÔ∏è] "..Hack[i].name) end
                table.insert(options, "[‚öôÔ∏è] "..Hack[8].name)
                local selected = gg.multiChoice(options, nil, "üéõÔ∏è ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö")
                if selected then
                    for i = 1, #options do
                        if selected[i] and Hack[i] then
                            ApplyHack(Hack[i], true)
                        elseif selected[i] and i == 4 then
                            ApplyHack(Hack[8], true)
                        end
                    end
                end

            elseif main == 2 then
                local modeList = { "‡∏™‡πÄ‡∏ï‡∏à‡∏´‡∏•‡∏±‡∏Å", "‡∏™‡πÄ‡∏ï‡∏à‡∏û‡∏¥‡πÄ‡∏®‡∏©", "‡∏™‡πÄ‡∏ï‡∏à‡∏à‡∏∏‡∏ï‡∏¥", "‡∏´‡∏≠‡∏Ñ‡∏≠‡∏¢", "‡∏ö‡∏≠‡∏™‡∏Å‡∏¥‡∏•‡∏î‡πå", "PVP" }
                local picked = gg.choice(modeList, nil, "‚ö° ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î:")
                if picked then ApplyAutoMode(modeList[picked]) end

            elseif main == 3 then
                local toggles = {}
                for i = 4, 7 do
                    local status = Hack[i].switch and "üü¢" or "üî¥"
                    table.insert(toggles, "["..status.."] "..Hack[i].name)
                end
                local selected = gg.multiChoice(toggles, nil, "üîò ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô")
                if selected then
                    for i = 4, 7 do
                        if selected[i - 3] then
                            ApplyHack(Hack[i], false)
                        end
                    end
                end

            elseif main == 4 then
                ResetAll()
            elseif main == 5 then
                toast("üõë ‡∏õ‡∏¥‡∏î‡πÄ‡∏Å‡∏°") gg.processKill() os.exit()
            elseif main == 6 then
                toast("üëã ‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡∏£‡∏≠‡∏ö‡∏´‡∏ô‡πâ‡∏≤!") os.exit()
            end
        end
        gg.sleep(300)
    end
end

-- üöÄ Start GUI
FloatingGUI()
